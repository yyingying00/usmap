[{"path":[]},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"interest fostering open welcoming environment, contributors maintainers pledge making participation project community harassment-free experience everyone, regardless age, body size, disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, religion, sexual identity orientation.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes creating positive environment include: Using welcoming inclusive language respectful differing viewpoints experiences Gracefully accepting constructive criticism Focusing best community Showing empathy towards community members Examples unacceptable behavior participants include: use sexualized language imagery unwelcome sexual attention advances Trolling, insulting/derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical electronic address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/CODE_OF_CONDUCT.html","id":"our-responsibilities","dir":"","previous_headings":"","what":"Our Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Project maintainers responsible clarifying standards acceptable behavior expected take appropriate fair corrective action response instances unacceptable behavior. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, ban temporarily permanently contributor behaviors deem inappropriate, threatening, offensive, harmful.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within project spaces public spaces individual representing project community. Examples representing project community include using official project e-mail address, posting via official social media account, acting appointed representative online offline event. Representation project may defined clarified project maintainers.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported contacting project team dilorenzo@hey.com. complaints reviewed investigated result response deemed necessary appropriate circumstances. project team obligated maintain confidentiality regard reporter incident. details specific enforcement policies may posted separately. Project maintainers follow enforce Code Conduct good faith may face temporary permanent repercussions determined members project’s leadership.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 1.4, available https://www.contributor-covenant.org/version/1/4/code--conduct.html answers common questions code conduct, see https://www.contributor-covenant.org/faq","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/articles/advanced-mapping.html","id":"labels","dir":"Articles","previous_headings":"","what":"Labels","title":"3. Advanced Mapping","text":"usmap 0.4.0, maps state labels can created:  usmap 0.5.0 adds ability add county labels:  Labels can colored using label_color parameter:","code":"usmap::plot_usmap(\"states\", labels = TRUE) usmap::plot_usmap(\"counties\", include = c(\"MA\", \"CT\", \"RI\"), labels = TRUE) usmap::plot_usmap(\"counties\",                   include = c(\"MA\", \"CT\", \"RI\"),                   labels = TRUE, label_color = \"blue\")"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/articles/advanced-mapping.html","id":"ggplot2-aesthetic-mapping-parameters","dir":"Articles","previous_headings":"","what":"ggplot2 aesthetic mapping parameters","title":"3. Advanced Mapping","text":"Parameters used map’s aesthetic mapping (ggplot2::aes) can passed directly via plot_usmap adding parameters anywhere call site:  Notice case set fill alpha parameters fill counties semi-transparent yellow color. following parameters supported: fill: fill color state/county polygons alpha: transparency state/county polygon fill colors color/colour: line color state/county polygons linewidth: thickness state/county polygon lines","code":"usmap::plot_usmap(\"counties\",                   include = c(\"MA\", \"CT\", \"RI\"),                   labels = TRUE, label_color = \"blue\",                   fill = \"yellow\", alpha = 0.25, color = \"orange\", linewidth = 2)"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/articles/example_analysis.html","id":"diving-into-us-tornado-data","dir":"Articles","previous_headings":"","what":"Diving into US Tornado Data","title":"4. Example Analysis","text":"page created exercise BSPH course Statistical Programming Paradigms Workflows (140.777), demonstrates functions package example data TidyTuesday. Codes revisited Evan Gower’s post Kaggle. analysis, trying understand many tornadoes happened years 1950 2021? tornadoes usually occur? fatalities caused tornadoes states? source data comes NOAA’s National Weather Service Storm Prediction Center Severe Weather Maps, Graphics, Data Page, data dictionary can found .","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/articles/example_analysis.html","id":"load-the-data","dir":"Articles","previous_headings":"Diving into US Tornado Data","what":"0. Load the data","title":"4. Example Analysis","text":"","code":"library(here) #> here() starts at /Users/michelleyu/Desktop/JHU/Statistical Programming Paradigms and Workflows/Project3/usmap library(tidyverse) #> ── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ── #> ✔ dplyr     1.1.3     ✔ readr     2.1.4 #> ✔ forcats   1.0.0     ✔ stringr   1.5.1 #> ✔ ggplot2   3.4.4     ✔ tibble    3.2.1 #> ✔ lubridate 1.9.3     ✔ tidyr     1.3.0 #> ✔ purrr     1.0.2 #> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ── #> ✖ dplyr::filter() masks stats::filter() #> ✖ dplyr::lag()    masks stats::lag() #> ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors if (!file.exists(here(\"data\", \"tuesdata_drugs.rda\"))) {     tuesdata <- tidytuesdayR::tt_load(\"2023-05-16\")     tornados <- tuesdata$tornados      # save the files to rda objects     save(tornados, file = here(\"data\", \"tuesdata_tornados.rda\")) } #> --- Compiling #TidyTuesday Information for 2023-05-16 ---- #> --- There is 1 file available --- #> --- Starting Download --- #>  #>  Downloading file 1 of 1: `tornados.csv` #> --- Download complete ---  load(here(\"data\", \"tuesdata_tornados.rda\")) glimpse(tornados) #> Rows: 68,693 #> Columns: 27 #> $ om           <dbl> 192, 193, 195, 196, 197, 194, 198, 199, 200, 201, 4, 5, 6… #> $ yr           <dbl> 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 1950, 195… #> $ mo           <dbl> 10, 10, 11, 11, 11, 11, 12, 12, 12, 12, 1, 1, 1, 1, 1, 1,… #> $ dy           <dbl> 1, 9, 20, 20, 20, 4, 2, 2, 2, 2, 13, 25, 25, 26, 3, 3, 3,… #> $ date         <date> 1950-10-01, 1950-10-09, 1950-11-20, 1950-11-20, 1950-11-… #> $ time         <time> 21:00:00, 02:15:00, 02:20:00, 04:00:00, 07:30:00, 17:00:… #> $ tz           <chr> \"America/Chicago\", \"America/Chicago\", \"America/Chicago\", … #> $ datetime_utc <dttm> 1950-10-02 03:00:00, 1950-10-09 08:15:00, 1950-11-20 08:… #> $ st           <chr> \"OK\", \"NC\", \"KY\", \"KY\", \"MS\", \"PA\", \"IL\", \"IL\", \"AR\", \"IL… #> $ stf          <dbl> 40, 37, 21, 21, 28, 42, 17, 17, 5, 17, 5, 29, 17, 48, 29,… #> $ mag          <dbl> 1, 3, 2, 1, 1, 3, 2, 3, 3, 1, 3, 2, 2, 2, 3, 3, 1, 2, 3, … #> $ inj          <dbl> 0, 3, 0, 0, 3, 1, 3, 25, 0, 0, 1, 5, 0, 2, 3, 3, 1, 0, 12… #> $ fat          <dbl> 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, … #> $ loss         <dbl> 5e+04, 5e+05, 5e+05, 5e+05, 5e+04, 5e+05, 5e+04, 5e+06, 5… #> $ slat         <dbl> 36.73, 34.17, 37.37, 38.20, 32.42, 40.20, 38.97, 38.75, 3… #> $ slon         <dbl> -102.52, -78.60, -87.20, -84.50, -89.13, -76.12, -90.05, … #> $ elat         <dbl> 36.88, 0.00, 0.00, 0.00, 0.00, 40.40, 39.07, 38.90, 36.18… #> $ elon         <dbl> -102.30, 0.00, 0.00, 0.00, 0.00, -75.93, -89.72, -89.38, … #> $ len          <dbl> 15.8, 2.0, 0.1, 0.1, 2.0, 15.9, 18.8, 18.0, 7.8, 9.6, 0.6… #> $ wid          <dbl> 10, 880, 10, 10, 37, 100, 50, 200, 10, 50, 17, 300, 100, … #> $ ns           <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, … #> $ sn           <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, … #> $ f1           <dbl> 25, 47, 177, 209, 101, 71, 119, 119, 65, 157, 113, 93, 91… #> $ f2           <dbl> 0, 0, 0, 0, 0, 11, 117, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, … #> $ f3           <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, … #> $ f4           <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, … #> $ fc           <lgl> FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, F…"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/articles/example_analysis.html","id":"prepare-and-wrangle-data","dir":"Articles","previous_headings":"Diving into US Tornado Data","what":"1. Prepare and wrangle data","title":"4. Example Analysis","text":"","code":"# delete several columns data <- tornados[, c(\"om\",\"yr\",\"mo\",\"date\",\"st\",\"fat\",\"mag\")]"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/articles/example_analysis.html","id":"tornadoes-through-the-years","dir":"Articles","previous_headings":"Diving into US Tornado Data","what":"2. Tornadoes through the years","title":"4. Example Analysis","text":"start main dive, lets look see many tornadoes time period 1950 2021.  can see gradually increasing trend number tornadoes years increase. trend similar top 4 cities tornadoes?","code":"# Count the number of tornadoes data %>% count() %>% print() #> # A tibble: 1 × 1 #>       n #>   <int> #> 1 68693 # Summarise average tornadoes by year yearly_tornado <- data %>%   group_by(yr) %>%   count()  # Add custom font if (!requireNamespace(\"showtext\", quietly = TRUE)) {   install.packages(\"showtext\") } library(showtext) #> Loading required package: sysfonts #> Loading required package: showtextdb font_add_google(\"Ubuntu\") font_labels <- \"Ubuntu\" showtext_auto()  # Plot data if (!requireNamespace(\"ggplot2\", quietly = TRUE)) {   install.packages(\"ggplot2\") } library(ggplot2) ggplot(yearly_tornado, aes(yr, n)) +   geom_line(color = \"#98103E\") +   labs(title = \"Tornado through the Years\",        subtitle = \"The number of tornadoes has risen over the past seventy years\",        caption = \"Period 1950 - 2021 | Data: NOAA\",        x = \"\",        y = \"Number of tornadoes\") +   theme_minimal() +   theme(text = element_text(family = font_labels, color = 'black'),         plot.title = element_text(size = 20, face = \"bold\"),         plot.subtitle = element_text(size = 12),         panel.grid.major.x = element_blank(),          panel.grid.minor.x = element_blank())"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/articles/example_analysis.html","id":"where-do-tornadoes-occur","dir":"Articles","previous_headings":"Diving into US Tornado Data","what":"3. Where do Tornadoes Occur?","title":"4. Example Analysis","text":"tornadoes likely occur states?  Texas clear margin saw tornadoes timeframe. Kansas, Oklahoma, Florida round top four. package also provide function retrieve unique FIPS (Federal Information Processing Standards) code state county. Let’s try top 4 states.  Looking visualization: Midwest Southeast regions seen high amount tornadoes touch . Northeast West regions saw low levels tornadoes.","code":"# Summarise number of tornadoes by state tornadoes_st <- data %>%   group_by(st) %>%   summarise(value = n()) %>%   arrange(desc(value))  # Print result print(tornadoes_st) #> # A tibble: 53 × 2 #>    st    value #>    <chr> <int> #>  1 TX     9265 #>  2 KS     4429 #>  3 OK     4144 #>  4 FL     3566 #>  5 NE     2993 #>  6 IA     2815 #>  7 IL     2716 #>  8 MS     2594 #>  9 AL     2456 #> 10 MO     2441 #> # ℹ 43 more rows yearly_tornado_top <- data %>%   group_by(yr, st) %>%   filter(st == \"TX\" | st == \"KS\" | st == \"OK\" | st == \"FL\") %>%    count()  # Plot data ggplot(yearly_tornado_top, aes(yr, n)) +   geom_line(color = \"#98103E\") +   facet_wrap(~ st, nrow = 2) +   labs(title = \"Tornado of top cities through the Years\",        subtitle = \"Pattern of the top 4 states are different\",        caption = \"Period 1950 - 2021 | Data: NOAA\",        x = \"\",        y = \"Number of tornadoes\") +   theme_minimal() +   theme(text = element_text(family = font_labels, color = 'black'),         plot.title = element_text(size = 20, face = \"bold\"),         plot.subtitle = element_text(size = 12),         panel.grid.major.x = element_blank(),          panel.grid.minor.x = element_blank()) if (!requireNamespace(\"usmap\", quietly = TRUE)) {   install.packages(\"usmap\") } library(usmap) fips(c(\"Tx\", \"KS\", \"OK\", \"FL\")) #> [1] \"48\" \"20\" \"40\" \"12\" # Add color levels to data for plot tornadoes_st <- tornadoes_st %>%   mutate(color = case_when(value < 500 ~ \"Less than 500\",                            value <= 1000 ~ \"501 - 1,000\",                            value <= 2000 ~ \"1,001 - 2,000\",                            value <= 4000 ~ \"2,001 - 4,000\",                            value > 4000 ~ \"More than 4,000\",                            TRUE ~ \"No Tornadoes\"))  # Arrange color levels tornadoes_st$color <- fct_relevel(tornadoes_st$color, c(\"More than 4,000\",                                                         \"2,001 - 4,000\",                                                         \"1,001 - 2,000\",                                                         \"501 - 1,000\",                                                         \"Less than 500\")) # Change column name to fit the usmap setting names(tornadoes_st)[1]<-\"state\"  # Plot data plot_usmap(data = tornadoes_st, values = \"color\", labels = FALSE) +   scale_fill_manual(values = c( \"Less than 500\" = \"#ffdfa4\",                                 \"501 - 1,000\" = \"#FFC457\",                                 \"1,001 - 2,000\"= \"#E4683F\",                                 \"2,001 - 4,000\"= \"#C03434\",                                 \"More than 4,000\" = \"#98103E\",                                 \"No Tornadoes\" = \"grey70\")) +   labs(title = \"Number of Tornadoes by State\",       subtitle = \"Period 1950 - 2021 | Data: NOAA\",       fill = \"color\",       x = \"\", y = \"\") +   theme(plot.title = element_text(margin = margin(b = 20, t=15),                                  family = font_labels, color = \"#22222b\",                                 face = \"bold\", size = 25, hjust = 0.5),         plot.subtitle = element_text(family = font_labels,                                     color = \"#22222b\", size = 15,                                      hjust = 0.5, vjust = 4),         legend.position = \"bottom\",         legend.title = element_blank(),         legend.text=element_text(family = font_labels, size = 8),          axis.ticks = element_blank(),         axis.text.x = element_blank(),         axis.text.y = element_blank(),         axis.title.x=element_blank()) +   guides(fill = guide_legend(     label.position = \"top\", family = font_labels, color = \"#808080\", nrow = 1,     keywidth = 2, keyheight = 0.5))"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/articles/example_analysis.html","id":"tornadoes-by-month","dir":"Articles","previous_headings":"Diving into US Tornado Data","what":"4. Tornadoes by Month","title":"4. Example Analysis","text":"### 5. Tornado fatality different level tornado affect fatality?","code":"# Summarise number or tornadoes by month month <- data %>%   group_by(mo) %>%   summarise(value = n())  # Add months mymonths <- c(\"Jan\",\"Feb\",\"Mar\",               \"Apr\",\"May\",\"Jun\",               \"Jul\",\"Aug\",\"Sep\",               \"Oct\",\"Nov\",\"Dec\")  # Order months month$abv <- mymonths[ month$mo ]  # Plot data ggplot(month, aes(abv, value)) +   geom_col(fill = \"#98103E\") +   scale_x_discrete(limits = month$abv) +   labs(title = \"Number of Tornadoes by Month\",        subtitle = \"May saw almost 15,000 tornadoes, by far the most in any month\",        caption = \"Period 1950 - 2021 | Data: NOAA\",        x = \"Month\",        y = \"Number of Tornadoes\") +   theme_minimal() +   theme(text = element_text(family = font_labels, color = 'black'),         plot.title = element_text(size = 20, face = \"bold\"),         plot.subtitle = element_text(size = 12),         panel.grid.major.x = element_blank(),          panel.grid.minor.x = element_blank()) # Summarise average fatalities by type level_fat <- data %>%   filter(!mag == -9) # make EF scale as factors level_fat$mag <- factor(level_fat$mag, c(\"0\",\"1\",\"2\",\"3\",\"4\",\"5\"))  # plot ggplot(level_fat, aes(mag, fat)) +  geom_boxplot() +  labs(title = \"Tornado Fatalities by EF Rating\",       subtitle = \"Higher the rating, higher the fatality and larger the variance\",       caption = \"Period 1950 - 2021 | Data: NOAA\",       x = \"EF Level\", y = \"Fatality\") +   theme_minimal() +   theme(text = element_text(family = font_labels, color = 'black'),         plot.title = element_text(size = 20, face = \"bold\"),         plot.subtitle = element_text(size = 12),         panel.grid.major.x = element_blank())"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/articles/example_analysis.html","id":"average-number-of-tornado-fatalities-by-state","dir":"Articles","previous_headings":"Diving into US Tornado Data","what":"6. Average number of Tornado Fatalities by State","title":"4. Example Analysis","text":"Alabama fatalities, followed Texas, Mississippi, Oklahoma.","code":"if (!requireNamespace(\"purrr\", quietly = TRUE)) {   install.packages(\"purrr\") } library(purrr) fat <- level_fat[, c(\"st\",\"yr\",\"fat\")] wide_fat <- fat %>%   group_by(st,yr) %>%    summarise(total_fat = sum(fat)) #> `summarise()` has grouped output by 'st'. You can override using the `.groups` #> argument.  # calculate the average number of tornado fatalities over years by state split_fat <- split(wide_fat, wide_fat$st) mean_fat <- split_fat %>%   map_dbl(.f = ~mean(.x$total_fat)) %>%    sort(decreasing = T) mean_fat #>         AL         TX         MS         OK         TN         AR         MO  #> 9.15068493 8.13698630 6.52054795 6.01369863 5.65277778 5.47945205 4.79452055  #>         IN         GA         OH         IL         MI         LA         KY  #> 3.67123288 3.16438356 3.13888889 3.08219178 3.07042254 3.06849315 2.69444444  #>         KS         FL         MA         NC         WI         MN         IA  #> 2.65753425 2.27397260 1.87500000 1.67123288 1.38356164 1.34246575 1.20547945  #>         SC         NE         PA         VA         NY         ND         SD  #> 0.97260274 0.82191781 0.68055556 0.52777778 0.44285714 0.38356164 0.23287671  #>         MD         OR         CT         CO         MT         DE         WY  #> 0.14754098 0.12500000 0.08163265 0.06849315 0.05970149 0.05882353 0.05714286  #>         NM         AZ         WV         NH         UT         NJ         ME  #> 0.05633803 0.04545455 0.03448276 0.02127660 0.02083333 0.01923077 0.01886792  #>         AK         CA         DC         HI         ID         NV         PR  #> 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000 0.00000000  #>         RI         VI         VT         WA  #> 0.00000000 0.00000000 0.00000000 0.00000000  # calculate the total number of tornado fatalities over years by state total_fat <- split_fat %>%    map_int(.f = ~sum(.x$total_fat)) %>%    sort(decreasing = T) total_fat #>  AL  TX  MS  OK  TN  AR  MO  IN  GA  OH  IL  LA  MI  KS  KY  FL  NC  MA  WI  MN  #> 668 594 476 439 407 400 350 268 231 226 225 224 218 194 194 166 122 105 101  98  #>  IA  SC  NE  PA  VA  NY  ND  SD  MD  OR  CO  CT  MT  NM  WY  AZ  DE  WV  ME  NH  #>  88  71  60  49  38  31  28  17   9   6   5   4   4   4   4   3   2   2   1   1  #>  NJ  UT  AK  CA  DC  HI  ID  NV  PR  RI  VI  VT  WA  #>   1   1   0   0   0   0   0   0   0   0   0   0   0"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/articles/example_analysis.html","id":"conclusion","dir":"Articles","previous_headings":"","what":"Conclusion","title":"4. Example Analysis","text":"analysis tornado dataset, found 67,937 tornadoes touch United States 1950 2021. Midwest Southeast impacted tornadoes. addition, 6,118 fatalities caused tornadoes, EF5 averaged hisghest amount fatalities EF rating.","code":""},{"path":[]},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/articles/introduction.html","id":"plotting","dir":"Articles","previous_headings":"","what":"Plotting","title":"1. Introduction","text":"Plots US maps R usually lack Alaska Hawaii. reason plotting takes literal longitude latitude coordinates maps cartesian x-y coordinate graph. Alaska Hawaii far mainland US using can unwieldy include . usmap package solves issue providing data frames Alaska Hawaii moved convenient spot just bottom left contiguous United States.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/articles/introduction.html","id":"blank-us-state-map","dir":"Articles","previous_headings":"Plotting","what":"Blank US state map","title":"1. Introduction","text":"","code":"usmap::plot_usmap()"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/articles/introduction.html","id":"blank-us-county-map","dir":"Articles","previous_headings":"Plotting","what":"Blank US county map","title":"1. Introduction","text":"","code":"usmap::plot_usmap(regions = \"counties\")"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/articles/introduction.html","id":"raw-map-data","dir":"Articles","previous_headings":"","what":"Raw map data","title":"1. Introduction","text":"raw US map data counties states can obtained manipulation (joining data). default regions \"states\".","code":"states_df <- usmap::us_map() counties_df <- usmap::us_map(regions = \"counties\")"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/articles/introduction.html","id":"fips-codes","dir":"Articles","previous_headings":"","what":"FIPS codes","title":"1. Introduction","text":"FIPS codes defined Federal Information Processing Standards US government. One usage uniquely identifying US states counties (among things identifying countries CIA World Factbook). Downloading datasets US Census often include FIPS codes identifiers can helpful know FIPS code represents. functions usmap built around FIPS code identification system convenience methods accessing performing reverse-lookups included.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/articles/introduction.html","id":"statecounty-fips-lookup","dir":"Articles","previous_headings":"FIPS codes","what":"State/County FIPS lookup","title":"1. Introduction","text":"","code":"# Get FIPS code for a state usmap::fips(state = \"MA\") #> [1] \"25\" usmap::fips(state = \"Massachusetts\") #> [1] \"25\"  # Get FIPS code for a county usmap::fips(state = \"NJ\", county = \"Bergen\") #> [1] \"34003\" usmap::fips(state = \"CA\", county = \"Orange County\") #> [1] \"06059\"  # The parameters are NOT case sensitive! usmap::fips(state = \"ca\", county = \"oRanGe cOUNty\") #> [1] \"06059\""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/articles/introduction.html","id":"fips-reverse-lookup","dir":"Articles","previous_headings":"FIPS codes","what":"FIPS reverse lookup","title":"1. Introduction","text":"FIPS code known want see state/county corresponds , use reverse lookup function fips_info.","code":"usmap::fips_info(c(\"30\", \"33\", \"34\")) #>   abbr fips          full #> 1   MT   30       Montana #> 2   NH   33 New Hampshire #> 3   NJ   34    New Jersey usmap::fips_info(c(\"01001\", \"01003\", \"01005\", \"01007\")) #>      full abbr         county  fips #> 1 Alabama   AL Autauga County 01001 #> 2 Alabama   AL Baldwin County 01003 #> 3 Alabama   AL Barbour County 01005 #> 4 Alabama   AL    Bibb County 01007"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/articles/introduction.html","id":"further-reading","dir":"Articles","previous_headings":"FIPS codes","what":"Further reading","title":"1. Introduction","text":"information FIPS can read . “map greatest epic poems. lines colors show realization great dreams.” - Gilbert H. Grosvenor, Editor National Geographic (1903 - 1954)","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/articles/mapping.html","id":"extending-plot_usmap-with-ggplot2","dir":"Articles","previous_headings":"","what":"Extending plot_usmap with ggplot2","title":"2. Mapping the US","text":"nice thing usmap::plot_usmap returns ggplot object object, means can add ggplot layers plot right box.","code":"library(usmap) library(ggplot2)  plot_usmap(regions = \"counties\") +    labs(title = \"US Counties\",        subtitle = \"This is a blank map of the counties of the United States.\") +    theme(panel.background = element_rect(color = \"black\", fill = \"lightblue\"))"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/articles/mapping.html","id":"plot-only-certain-states","dir":"Articles","previous_headings":"Extending plot_usmap with ggplot2","what":"Plot only certain states","title":"2. Mapping the US","text":"","code":"library(usmap) library(ggplot2)  plot_usmap(include = c(\"CA\", \"ID\", \"NV\", \"OR\", \"WA\")) +   labs(title = \"Western US States\",        subtitle = \"These are the states in the Pacific Timezone.\")"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/articles/mapping.html","id":"add-some-data-to-the-map","dir":"Articles","previous_headings":"Extending plot_usmap with ggplot2","what":"Add some data to the map","title":"2. Mapping the US","text":"Notice comprehensive expandability can applied map using ggplot2 layers. example, might want use different color scheme.","code":"library(usmap) library(ggplot2)  plot_usmap(data = statepop, values = \"pop_2015\", color = \"red\") +    scale_fill_continuous(name = \"Population (2015)\", label = scales::comma) +    theme(legend.position = \"right\")"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/articles/mapping.html","id":"change-fill-color-scale","dir":"Articles","previous_headings":"Extending plot_usmap with ggplot2","what":"Change fill color scale","title":"2. Mapping the US","text":"data-filled map can also filtered show certain regions , like western states shown .","code":"library(usmap) library(ggplot2)  plot_usmap(data = statepop, values = \"pop_2015\", color = \"red\") +    scale_fill_continuous(     low = \"white\", high = \"red\", name = \"Population (2015)\", label = scales::comma   ) + theme(legend.position = \"right\")"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/articles/mapping.html","id":"show-data-in-certain-states","dir":"Articles","previous_headings":"Extending plot_usmap with ggplot2","what":"Show data in certain states","title":"2. Mapping the US","text":"","code":"library(usmap) library(ggplot2)  plot_usmap(     data = statepop, values = \"pop_2015\", include = c(\"CA\", \"ID\", \"NV\", \"OR\", \"WA\"), color = \"red\"   ) +    scale_fill_continuous(     low = \"white\", high = \"red\", name = \"Population (2015)\", label = scales::comma   ) +    labs(title = \"Western US States\", subtitle = \"These are the states in the Pacific Timezone.\") +   theme(legend.position = \"right\")"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/articles/mapping.html","id":"required-data-format","dir":"Articles","previous_headings":"Extending plot_usmap with ggplot2","what":"Required Data Format","title":"2. Mapping the US","text":"data passed data parameter plot_usmap() must data frame least two columns. One columns must named \"fips\" \"state\" contain either FIPS code, state abbreviation, state name (county maps FIPS code supported). second column must values plotted region. default name values column \"values\". different name used data frame, name can specified values parameter plot_usmap. extra columns data frame ignored.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/articles/mapping.html","id":"fips-column-with-default-values-column","dir":"Articles","previous_headings":"Extending plot_usmap with ggplot2 > Required Data Format","what":"FIPS column with default values column","title":"2. Mapping the US","text":"","code":"df <- data.frame(   fips = c(\"02\", \"01\", \"05\", \"04\"),   values = c(14, 18, 19, 8) )  plot_usmap(data = df)"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/articles/mapping.html","id":"fips-column-with-custom-values-column","dir":"Articles","previous_headings":"Extending plot_usmap with ggplot2 > Required Data Format","what":"FIPS column with custom values column","title":"2. Mapping the US","text":"Name values column must specified values parameter \"values\".","code":"df <- data.frame(   fips = c(\"02\", \"01\", \"05\", \"04\"),   population = c(14, 18, 19, 8) )  plot_usmap(data = df, values = \"population\")"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/articles/mapping.html","id":"states","dir":"Articles","previous_headings":"Extending plot_usmap with ggplot2 > Required Data Format","what":"States","title":"2. Mapping the US","text":"Abbreviations full names can mixed desired.","code":"df <- data.frame(   state = c(\"AL\", \"Alaska\", \"AR\", \"AZ\"),   values = c(14, 18, 19, 8) )  plot_usmap(data = df)"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/articles/mapping.html","id":"counties","dir":"Articles","previous_headings":"Extending plot_usmap with ggplot2 > Required Data Format","what":"Counties","title":"2. Mapping the US","text":"County names supported plot_usmap data frames. Use fips instead.","code":"df <- data.frame(   fips = c(\"10001\", \"10003\", \"10005\"),   values = c(93, 98, 41) )  plot_usmap(data = df)"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/articles/mapping.html","id":"built-in-regions","dir":"Articles","previous_headings":"","what":"Built-in Regions","title":"2. Mapping the US","text":"usmap provides built-regions based US Census Bureau Regions Divisions. can used place include/exclude parameters using us_map plot_usmap start . (dot):    also works county maps. regions can also combined actual state FIPS values within include/exclude parameters:  can even include exclude individual counties (county-level inclusions/exclusions can done via FIPS codes due duplicate county names across states; example eight different states “Orange County”):  parameters therefore allow possibility complex compositions states counties, create exact map desired.","code":"usmap::plot_usmap(include = .south_region) usmap::plot_usmap(include = .east_south_central) usmap::plot_usmap(include = .south_region, exclude = .east_south_central) usmap::plot_usmap(\"counties\",                    include = c(.south_region, \"IA\"),                    exclude = c(.east_south_central, \"12\"))  # 12 = FL usmap::plot_usmap(\"counties\", fill = \"yellow\", alpha = 0.25,                   # 06065 = Riverside County, CA                   include = c(.south_region, \"IA\", \"06065\"),                   # 12 = FL, 48141 = El Paso County, TX                   exclude = c(.east_south_central, \"12\", \"48141\"))"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/articles/mapping.html","id":"supported-us-census-regions-and-divisions","dir":"Articles","previous_headings":"Built-in Regions","what":"Supported US Census Regions and Divisions","title":"2. Mapping the US","text":"following divisions supported: Regions composed multiple divisions, following supported:","code":".new_england #> [1] \"CT\" \"MA\" \"ME\" \"NH\" \"RI\" \"VT\" .mid_atlantic #> [1] \"NJ\" \"NY\" \"PA\" .east_north_central #> [1] \"IL\" \"IN\" \"MI\" \"OH\" \"WI\" .west_north_central #> [1] \"IA\" \"KS\" \"MN\" \"MO\" \"NE\" \"ND\" \"SD\" .south_atlantic #> [1] \"DC\" \"DE\" \"FL\" \"GA\" \"MD\" \"NC\" \"SC\" \"VA\" \"WV\" .east_south_central #> [1] \"AL\" \"KY\" \"MS\" \"TN\" .west_south_central #> [1] \"AR\" \"LA\" \"OK\" \"TX\" .mountain #> [1] \"AZ\" \"CO\" \"ID\" \"MT\" \"NV\" \"NM\" \"UT\" \"WY\" .pacific #> [1] \"AK\" \"CA\" \"HI\" \"OR\" \"WA\" .northeast_region      # c(.new_england, .mid_atlantic) #> [1] \"CT\" \"MA\" \"ME\" \"NH\" \"RI\" \"VT\" \"NJ\" \"NY\" \"PA\" .north_central_region  # c(.east_north_central, .west_north_central) #>  [1] \"IL\" \"IN\" \"MI\" \"OH\" \"WI\" \"IA\" \"KS\" \"MN\" \"MO\" \"NE\" \"ND\" \"SD\" .midwest_region        # .north_central_region (renamed in June 1984) #>  [1] \"IL\" \"IN\" \"MI\" \"OH\" \"WI\" \"IA\" \"KS\" \"MN\" \"MO\" \"NE\" \"ND\" \"SD\" .south_region          # c(.south_atlantic, .east_south_central, .west_south_central) #>  [1] \"DC\" \"DE\" \"FL\" \"GA\" \"MD\" \"NC\" \"SC\" \"VA\" \"WV\" \"AL\" \"KY\" \"MS\" \"TN\" \"AR\" \"LA\" #> [16] \"OK\" \"TX\" .west_region           # c(.mountain, .pacific) #>  [1] \"AZ\" \"CO\" \"ID\" \"MT\" \"NV\" \"NM\" \"UT\" \"WY\" \"AK\" \"CA\" \"HI\" \"OR\" \"WA\""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/articles/mapping.html","id":"raw-map-data","dir":"Articles","previous_headings":"","what":"Raw map data","title":"2. Mapping the US","text":"raw US map data counties states can obtained manipulation (joining data). can also include certain states counties just like plot_usmap. fact, regions include parameters plot_usmap derived directly usage us_map.","code":"str(usmap::us_map()) #> 'data.frame':    13663 obs. of  9 variables: #>  $ x    : num  1091779 1091268 1091140 1090940 1090913 ... #>  $ y    : num  -1380695 -1376372 -1362998 -1343517 -1341006 ... #>  $ order: int  1 2 3 4 5 6 7 8 9 10 ... #>  $ hole : logi  FALSE FALSE FALSE FALSE FALSE FALSE ... #>  $ piece: int  1 1 1 1 1 1 1 1 1 1 ... #>  $ group: chr  \"01.1\" \"01.1\" \"01.1\" \"01.1\" ... #>  $ fips : chr  \"01\" \"01\" \"01\" \"01\" ... #>  $ abbr : chr  \"AL\" \"AL\" \"AL\" \"AL\" ... #>  $ full : chr  \"Alabama\" \"Alabama\" \"Alabama\" \"Alabama\" ... str(usmap::us_map(regions = \"counties\")) #> 'data.frame':    55211 obs. of  10 variables: #>  $ x     : num  1225889 1244873 1244129 1272010 1276797 ... #>  $ y     : num  -1275020 -1272331 -1267515 -1262889 -1295514 ... #>  $ order : int  1 2 3 4 5 6 7 8 9 10 ... #>  $ hole  : logi  FALSE FALSE FALSE FALSE FALSE FALSE ... #>  $ piece : int  1 1 1 1 1 1 1 1 1 1 ... #>  $ group : chr  \"01001.1\" \"01001.1\" \"01001.1\" \"01001.1\" ... #>  $ fips  : chr  \"01001\" \"01001\" \"01001\" \"01001\" ... #>  $ abbr  : chr  \"AL\" \"AL\" \"AL\" \"AL\" ... #>  $ full  : chr  \"Alabama\" \"Alabama\" \"Alabama\" \"Alabama\" ... #>  $ county: chr  \"Autauga County\" \"Autauga County\" \"Autauga County\" \"Autauga County\" ..."},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Paolo Di Lorenzo. Author, maintainer.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Di Lorenzo P (2023). usmap: US Maps Including Alaska Hawaii. R package version 0.6.3.9999, https://usmap.dev.","code":"@Manual{,   title = {usmap: US Maps Including Alaska and Hawaii},   author = {Paolo {Di Lorenzo}},   year = {2023},   note = {R package version 0.6.3.9999},   url = {https://usmap.dev}, }"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/index.html","id":"id_-usmap","dir":"","previous_headings":"","what":"US Maps Including Alaska and Hawaii","title":"US Maps Including Alaska and Hawaii","text":"Original R package comes : https://github.com/pdil/usmap, created Paolo Di Lorenzo. Pkgdown website link: https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00; website Example Analysis created Yingying Yu. 5 things customized  pkgdown website: Added bootswatch theme flatly Edited sidebar exclude community Rearranged navbar Reordered link Articles Changed footer include name    View code used generate plots: resources/examples.R","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/index.html","id":"purpose","dir":"","previous_headings":"","what":"Purpose","title":"US Maps Including Alaska and Hawaii","text":"Typically R difficult create nice US choropleths include Alaska Hawaii. functions presented attempt elegantly solve problem manually moving states new location providing fortified data frame mapping visualization. allows user easily add data color map.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/index.html","id":"shape-files","dir":"","previous_headings":"","what":"Shape Files","title":"US Maps Including Alaska and Hawaii","text":"shape files use plot maps R located usmapdata package. generated US Census Bureau cartographic boundary files. Maps state county levels included convenience.","code":""},{"path":[]},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"US Maps Including Alaska and Hawaii","text":"install CRAN (recommended), run following code R console: install package repository, run following code R console: Installing using devtools::install_github provide recent developer build usmap. ⚠️ developer build may unstable function correctly, use caution. begin using usmap, import package using library command:","code":"install.packages(\"usmap\") # install.package(\"devtools\") devtools::install_github(\"pdil/usmap\") library(usmap)"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"US Maps Including Alaska and Hawaii","text":"read package vignettes, explain helpful uses package, use vignette: help package, open issue ask question Stackoverflow usmap tag.","code":"vignette(package = \"usmap\") vignette(\"introduction\", package = \"usmap\") vignette(\"mapping\", package = \"usmap\") vignette(\"advanced-mapping\", package = \"usmap\")"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"US Maps Including Alaska and Hawaii","text":"Obtain map certain region breakdown   Look FIPS codes states counties Retrieve states counties FIPS codes Add FIPS codes data frame Plot US maps Display certain states, counties, regions","code":"state_map <- us_map(regions = \"states\") #> 'data.frame':  13696 obs. of  9 variables:   #> $ x    : num  1093752 1093244 1093125 1092939 1092914 ...   #> $ y    : num  -1378545 -1374233 -1360891 -1341458 -1338952 ...   #> $ order: int  1 2 3 4 5 6 7 8 9 10 ...   #> $ hole : logi  FALSE FALSE FALSE FALSE FALSE FALSE ...   #> $ piece: int  1 1 1 1 1 1 1 1 1 1 ...   #> $ group: chr  \"01.1\" \"01.1\" \"01.1\" \"01.1\" ...   #> $ fips : chr  \"01\" \"01\" \"01\" \"01\" ...   #> $ abbr : chr  \"AL\" \"AL\" \"AL\" \"AL\" ...   #> $ full : chr  \"Alabama\" \"Alabama\" \"Alabama\" \"Alabama\" ... county_map <- us_map(regions = \"counties\") #> 'data.frame':  55097 obs. of  10 variables:   #> $ x     : num  811200 829408 828835 855600 859265 ...   #> $ y     : num  -821207 -819722 -814641 -811770 -846158 ...   #> $ order : int  1 2 3 4 5 6 7 8 9 10 ...   #> $ hole  : logi  FALSE FALSE FALSE FALSE FALSE FALSE ...   #> $ piece : int  1 1 1 1 1 1 1 1 1 1 ...   #> $ group : chr  \"01001.1\" \"01001.1\" \"01001.1\" \"01001.1\" ...   #> $ fips  : chr  \"01001\" \"01001\" \"01001\" \"01001\" ...   #> $ abbr  : chr  \"AL\" \"AL\" \"AL\" \"AL\" ...   #> $ full  : chr  \"Alabama\" \"Alabama\" \"Alabama\" \"Alabama\" ...   #> $ county: chr  \"Autauga County\" \"Autauga County\" \"Autauga County\" \"Autauga County\" ... fips(\"New Jersey\") #> \"34\"  fips(c(\"AZ\", \"CA\", \"New Hampshire\")) #> \"04\" \"06\" \"33\"  fips(\"NJ\", county = \"Mercer\") #> \"34021\"  fips(\"NJ\", county = c(\"Bergen\", \"Hudson\", \"Mercer\")) #> \"34003\" \"34017\" \"34021\" fips_info(c(\"34\", \"35\")) #>         full abbr fips #> 1 New Jersey   NJ   34  #> 2 New Mexico   NM   35  fips_info(c(\"34021\", \"35021\")) #>         full abbr         county  fips #> 1 New Jersey   NJ  Mercer County 34021 #> 2 New Mexico   NM Harding County 35021 data <- data.frame(   state = c(\"NJ\", \"NJ\", \"NJ\", \"PA\"),   county = c(\"Bergen\", \"Hudson\", \"Mercer\", \"Allegheny\") )  library(dplyr) data %>% rowwise %>% mutate(fips = fips(state, county))  #>   state     county  fips #> 1    NJ     Bergen 34003 #> 2    NJ     Hudson 34017 #> 3    NJ     Mercer 34021 #> 4    PA  Allegheny 42003 plot_usmap(\"states\") plot_usmap(\"counties\") plot_usmap(\"states\", include = .mountain, labels = TRUE)  plot_usmap(\"counties\", data = countypov, values = \"pct_pov_2014\", include = \"FL\") +     ggplot2::scale_fill_continuous(low = \"green\", high = \"red\", guide = FALSE)  plot_usmap(\"counties\", data = countypop, values = \"pop_2015\", include = .new_england) +      ggplot2::scale_fill_continuous(low = \"blue\", high = \"yellow\", guide = FALSE)"},{"path":[]},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/index.html","id":"projection","dir":"","previous_headings":"Additional Information","what":"Projection","title":"US Maps Including Alaska and Hawaii","text":"usmap uses Albers equal-area conic projection, arguments follows: projection used US National Atlas. obtain projection used usmap, use usmap_crs(). Alternatively, CRS (coordinate reference system) can created manually following command:","code":"#> Coordinate Reference System:   #> Deprecated Proj.4 representation:   #>  +proj=laea +lat_0=45 +lon_0=-100 +x_0=0 +y_0=0 +ellps=sphere   #> +units=m +no_defs    #> WKT2 2019 representation:   #> PROJCRS[\"unknown\",   #>     BASEGEOGCRS[\"unknown\",   #>         DATUM[\"unknown\",   #>             ELLIPSOID[\"Normal Sphere (r=6370997)\",6370997,0,   #>                 LENGTHUNIT[\"metre\",1,   #>                     ID[\"EPSG\",9001]]]],   #>         PRIMEM[\"Greenwich\",0,   #>             ANGLEUNIT[\"degree\",0.0174532925199433],   #>             ID[\"EPSG\",8901]]],   #>     CONVERSION[\"unknown\",   #>         METHOD[\"Lambert Azimuthal Equal Area (Spherical)\",   #>             ID[\"EPSG\",1027]],   #>         PARAMETER[\"Latitude of natural origin\",45,   #>             ANGLEUNIT[\"degree\",0.0174532925199433],   #>             ID[\"EPSG\",8801]],   #>         PARAMETER[\"Longitude of natural origin\",-100,   #>             ANGLEUNIT[\"degree\",0.0174532925199433],   #>             ID[\"EPSG\",8802]],   #>         PARAMETER[\"False easting\",0,   #>             LENGTHUNIT[\"metre\",1],   #>             ID[\"EPSG\",8806]],   #>         PARAMETER[\"False northing\",0,   #>             LENGTHUNIT[\"metre\",1],   #>             ID[\"EPSG\",8807]]],   #>     CS[Cartesian,2],   #>         AXIS[\"(E)\",east,   #>             ORDER[1],   #>             LENGTHUNIT[\"metre\",1,   #>                 ID[\"EPSG\",9001]]],   #>         AXIS[\"(N)\",north,   #>             ORDER[2],   #>             LENGTHUNIT[\"metre\",1,   #>                 ID[\"EPSG\",9001]]]] sp::CRS(paste(\"+proj=laea +lat_0=45 +lon_0=-100 +x_0=0 +y_0=0\",               \"+a=6370997 +b=6370997 +units=m +no_defs\"))"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/index.html","id":"acknowledgments","dir":"","previous_headings":"","what":"Acknowledgments","title":"US Maps Including Alaska and Hawaii","text":"code used generate map files based blog post Bob Rudis:Moving Earth (well, Alaska & Hawaii) R","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/citypop.html","id":null,"dir":"Reference","previous_headings":"","what":"Most populous city in each state (2010) — citypop","title":"Most populous city in each state (2010) — citypop","text":"populous city US state, 2010 US Census. data formatted transforming usmap_transform. longitude latitude transformed, can added plot_usmap using ggplot2 layers.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/citypop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Most populous city in each state (2010) — citypop","text":"","code":"data(citypop)"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/citypop.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Most populous city in each state (2010) — citypop","text":"data frame 51 rows 5 variables.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/citypop.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Most populous city in each state (2010) — citypop","text":"lon longitude populous city. lat latitude populous city. state name state containing city. most_populous_city name city. city_pop population city.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/citypop.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Most populous city in each state (2010) — citypop","text":"https://www.census.gov/programs-surveys/decennial-census/decade.2010.html","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/countypop.html","id":null,"dir":"Reference","previous_headings":"","what":"Population estimates (2015), county level — countypop","title":"Population estimates (2015), county level — countypop","text":"US census population estimates county 2015.  data formatted easy merging output us_map.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/countypop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Population estimates (2015), county level — countypop","text":"","code":"data(countypop)"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/countypop.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Population estimates (2015), county level — countypop","text":"data frame 3142 rows 4 variables.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/countypop.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Population estimates (2015), county level — countypop","text":"fips 5-digit FIPS code corresponding county. abbr 2-letter state abbreviation. county full county name. pop_2015 2015 population estimate (number people) corresponding county.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/countypop.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Population estimates (2015), county level — countypop","text":"https://www.census.gov/programs-surveys/popest.html https://www.ers.usda.gov/data-products/county-level-data-sets/","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/countypov.html","id":null,"dir":"Reference","previous_headings":"","what":"Poverty percentage estimates (2014), county level — countypov","title":"Poverty percentage estimates (2014), county level — countypov","text":"US census poverty percentage estimates county 2014.  data formatted easy merging output us_map.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/countypov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Poverty percentage estimates (2014), county level — countypov","text":"","code":"data(countypov)"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/countypov.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Poverty percentage estimates (2014), county level — countypov","text":"data frame 3142 rows 4 variables.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/countypov.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Poverty percentage estimates (2014), county level — countypov","text":"fips 5-digit FIPS code corresponding county. abbr 2-letter state abbreviation. county full county name. pct_pov_2014 2014 poverty estimate (percent county population) corresponding county.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/countypov.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Poverty percentage estimates (2014), county level — countypov","text":"https://www.census.gov/topics/income-poverty/poverty.html https://www.ers.usda.gov/data-products/county-level-data-sets/","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-east_north_central.html","id":null,"dir":"Reference","previous_headings":"","what":"East North Central census division — .east_north_central","title":"East North Central census division — .east_north_central","text":"US Census Bureau regional division containing Illinois, Indiana, Michigan, Ohio, Wisconsin.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-east_north_central.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"East North Central census division — .east_north_central","text":"","code":".east_north_central"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-east_north_central.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"East North Central census division — .east_north_central","text":"object class character length 5.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-east_north_central.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"East North Central census division — .east_north_central","text":"See https://www2.census.gov/geo/pdfs/maps-data/maps/reference/us_regdiv.pdf","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-east_north_central.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"East North Central census division — .east_north_central","text":"","code":"plot_usmap(include = .east_north_central, labels = TRUE)"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-east_south_central.html","id":null,"dir":"Reference","previous_headings":"","what":"East South Central census division — .east_south_central","title":"East South Central census division — .east_south_central","text":"US Census Bureau regional division containing Alabama, Kentucky, Mississippi, Tennessee.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-east_south_central.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"East South Central census division — .east_south_central","text":"","code":".east_south_central"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-east_south_central.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"East South Central census division — .east_south_central","text":"object class character length 4.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-east_south_central.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"East South Central census division — .east_south_central","text":"See https://www2.census.gov/geo/pdfs/maps-data/maps/reference/us_regdiv.pdf","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-east_south_central.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"East South Central census division — .east_south_central","text":"","code":"plot_usmap(include = .east_south_central, labels = TRUE)"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-mid_atlantic.html","id":null,"dir":"Reference","previous_headings":"","what":"Mid-Atlantic census division — .mid_atlantic","title":"Mid-Atlantic census division — .mid_atlantic","text":"US Census Bureau regional division containing New Jersey, New York, Pennsylvania.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-mid_atlantic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mid-Atlantic census division — .mid_atlantic","text":"","code":".mid_atlantic"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-mid_atlantic.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mid-Atlantic census division — .mid_atlantic","text":"object class character length 3.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-mid_atlantic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mid-Atlantic census division — .mid_atlantic","text":"See https://www2.census.gov/geo/pdfs/maps-data/maps/reference/us_regdiv.pdf","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-mid_atlantic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mid-Atlantic census division — .mid_atlantic","text":"","code":"plot_usmap(include = .mid_atlantic, labels = TRUE)"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-midwest_region.html","id":null,"dir":"Reference","previous_headings":"","what":"Midwest census region — .midwest_region","title":"Midwest census region — .midwest_region","text":"US Census Bureau region containing East North Central West North Central divisions. region designated \"North Central Region\" prior June 1984.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-midwest_region.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Midwest census region — .midwest_region","text":"","code":".midwest_region"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-midwest_region.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Midwest census region — .midwest_region","text":"object class character length 12.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-midwest_region.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Midwest census region — .midwest_region","text":"See https://www2.census.gov/geo/pdfs/maps-data/maps/reference/us_regdiv.pdf","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-midwest_region.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Midwest census region — .midwest_region","text":"","code":"plot_usmap(include = .midwest_region, labels = TRUE)"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-mountain.html","id":null,"dir":"Reference","previous_headings":"","what":"Mountain census division — .mountain","title":"Mountain census division — .mountain","text":"US Census Bureau regional division containing Arizona, Colorado, Idaho, Montana, Nevada, New Mexico, Utah, Wyoming.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-mountain.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mountain census division — .mountain","text":"","code":".mountain"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-mountain.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Mountain census division — .mountain","text":"object class character length 8.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-mountain.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Mountain census division — .mountain","text":"See https://www2.census.gov/geo/pdfs/maps-data/maps/reference/us_regdiv.pdf","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-mountain.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mountain census division — .mountain","text":"","code":"plot_usmap(include = .mountain, labels = TRUE)"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-new_england.html","id":null,"dir":"Reference","previous_headings":"","what":"New England census division — .new_england","title":"New England census division — .new_england","text":"US Census Bureau regional division containing Connecticut, Maine, Massachusetts, New Hampshire, Rhode Island, Vermont.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-new_england.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"New England census division — .new_england","text":"","code":".new_england"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-new_england.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"New England census division — .new_england","text":"object class character length 6.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-new_england.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"New England census division — .new_england","text":"See https://www2.census.gov/geo/pdfs/maps-data/maps/reference/us_regdiv.pdf","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-new_england.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"New England census division — .new_england","text":"","code":"plot_usmap(include = .new_england, labels = TRUE)"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-north_central_region.html","id":null,"dir":"Reference","previous_headings":"","what":"North-Central census region — .north_central_region","title":"North-Central census region — .north_central_region","text":"Former US Census Bureau region containing East North Central West North Central divisions. region designated \"Midwest\" since June 1984.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-north_central_region.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"North-Central census region — .north_central_region","text":"","code":".north_central_region"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-north_central_region.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"North-Central census region — .north_central_region","text":"object class character length 12.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-north_central_region.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"North-Central census region — .north_central_region","text":"See https://www2.census.gov/geo/pdfs/maps-data/maps/reference/us_regdiv.pdf","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-north_central_region.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"North-Central census region — .north_central_region","text":"","code":"plot_usmap(include = .north_central_region, labels = TRUE)"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-northeast_region.html","id":null,"dir":"Reference","previous_headings":"","what":"Northeast census region — .northeast_region","title":"Northeast census region — .northeast_region","text":"US Census Bureau region containing New England Mid-Atlantic divisions.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-northeast_region.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Northeast census region — .northeast_region","text":"","code":".northeast_region"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-northeast_region.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Northeast census region — .northeast_region","text":"object class character length 9.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-northeast_region.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Northeast census region — .northeast_region","text":"See https://www2.census.gov/geo/pdfs/maps-data/maps/reference/us_regdiv.pdf","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-northeast_region.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Northeast census region — .northeast_region","text":"","code":"plot_usmap(include = .northeast_region, labels = TRUE)"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-pacific.html","id":null,"dir":"Reference","previous_headings":"","what":"Pacific census division — .pacific","title":"Pacific census division — .pacific","text":"US Census Bureau regional division containing Alaska, California, Hawaii, Oregon, Washington.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-pacific.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pacific census division — .pacific","text":"","code":".pacific"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-pacific.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Pacific census division — .pacific","text":"object class character length 5.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-pacific.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Pacific census division — .pacific","text":"See https://www2.census.gov/geo/pdfs/maps-data/maps/reference/us_regdiv.pdf","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-pacific.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pacific census division — .pacific","text":"","code":"plot_usmap(include = .pacific, labels = TRUE)"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-south_atlantic.html","id":null,"dir":"Reference","previous_headings":"","what":"South Atlantic census division — .south_atlantic","title":"South Atlantic census division — .south_atlantic","text":"US Census Bureau regional division containing Delaware, Florida, Georgia, Maryland, North Carolina, South Carolina, Virginia, District Columbia, West Virginia.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-south_atlantic.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"South Atlantic census division — .south_atlantic","text":"","code":".south_atlantic"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-south_atlantic.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"South Atlantic census division — .south_atlantic","text":"object class character length 9.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-south_atlantic.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"South Atlantic census division — .south_atlantic","text":"See https://www2.census.gov/geo/pdfs/maps-data/maps/reference/us_regdiv.pdf","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-south_atlantic.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"South Atlantic census division — .south_atlantic","text":"","code":"plot_usmap(include = .south_atlantic, labels = TRUE)"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-south_region.html","id":null,"dir":"Reference","previous_headings":"","what":"South census region — .south_region","title":"South census region — .south_region","text":"US Census Bureau region containing South Atlantic, East South Central, West South Central divisions.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-south_region.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"South census region — .south_region","text":"","code":".south_region"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-south_region.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"South census region — .south_region","text":"object class character length 17.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-south_region.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"South census region — .south_region","text":"See https://www2.census.gov/geo/pdfs/maps-data/maps/reference/us_regdiv.pdf","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-south_region.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"South census region — .south_region","text":"","code":"plot_usmap(include = .midwest_region, labels = TRUE)"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-west_north_central.html","id":null,"dir":"Reference","previous_headings":"","what":"West North Central census division — .west_north_central","title":"West North Central census division — .west_north_central","text":"US Census Bureau regional division containing Iowa, Kansas, Minnesota, Missouri, Nebraska, North Dakota, South Dakota.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-west_north_central.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"West North Central census division — .west_north_central","text":"","code":".west_north_central"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-west_north_central.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"West North Central census division — .west_north_central","text":"object class character length 7.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-west_north_central.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"West North Central census division — .west_north_central","text":"See https://www2.census.gov/geo/pdfs/maps-data/maps/reference/us_regdiv.pdf","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-west_north_central.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"West North Central census division — .west_north_central","text":"","code":"plot_usmap(include = .west_north_central, labels = TRUE)"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-west_region.html","id":null,"dir":"Reference","previous_headings":"","what":"West census region — .west_region","title":"West census region — .west_region","text":"US Census Bureau region containing Mountain Pacific divisions.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-west_region.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"West census region — .west_region","text":"","code":".west_region"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-west_region.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"West census region — .west_region","text":"object class character length 13.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-west_region.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"West census region — .west_region","text":"See https://www2.census.gov/geo/pdfs/maps-data/maps/reference/us_regdiv.pdf","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-west_region.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"West census region — .west_region","text":"","code":"plot_usmap(include = .midwest_region, labels = TRUE)"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-west_south_central.html","id":null,"dir":"Reference","previous_headings":"","what":"West South Central census division — .west_south_central","title":"West South Central census division — .west_south_central","text":"US Census Bureau regional division containing Arkansas, Louisiana, Oklahoma, Texas.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-west_south_central.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"West South Central census division — .west_south_central","text":"","code":".west_south_central"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-west_south_central.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"West South Central census division — .west_south_central","text":"object class character length 4.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-west_south_central.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"West South Central census division — .west_south_central","text":"See https://www2.census.gov/geo/pdfs/maps-data/maps/reference/us_regdiv.pdf","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/dot-west_south_central.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"West South Central census division — .west_south_central","text":"","code":"plot_usmap(include = .west_south_central, labels = TRUE)"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/earthquakes.html","id":null,"dir":"Reference","previous_headings":"","what":"Earthquakes (2019) — earthquakes","title":"Earthquakes (2019) — earthquakes","text":"US earthquakes magnitude 2.5 greater, occurring first half 2019, January 1st June 30th, USGS. data formatted transforming usmap_transform. longitude latitude transformed, can added plot_usmap using ggplot2 layers.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/earthquakes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Earthquakes (2019) — earthquakes","text":"","code":"data(earthquakes)"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/earthquakes.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Earthquakes (2019) — earthquakes","text":"data frame 2254 rows 3 variables.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/earthquakes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Earthquakes (2019) — earthquakes","text":"lon longitude earthquake's location. lat latitude earthquake's location. mag magnitude earthquake.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/earthquakes.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Earthquakes (2019) — earthquakes","text":"https://www.usgs.gov/programs/earthquake-hazards/earthquakes https://earthquake.usgs.gov/earthquakes/search/","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/fips.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve FIPS code for either a US state or county — fips","title":"Retrieve FIPS code for either a US state or county — fips","text":"US state county unique FIPS (Federal Information Processing Standards) code. Use function obtain FIPS code state county.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/fips.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve FIPS code for either a US state or county — fips","text":"","code":"fips(state, county = c())"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/fips.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve FIPS code for either a US state or county — fips","text":"state state(s) obtain FIPS code(s). Can entered either state abbreviation full name (case-insensitive). state can entered either single state vector states. state vector, county must omitted. county county obtain FIPS code. Can entered without \"county\" (case-insensitive).","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/fips.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve FIPS code for either a US state or county — fips","text":"FIPS code(s) given state county. states entered, vector length equal number states returned. states found invalid, NA returned place. state county entered, single value FIPS code given county returned. county invalid given state, error thrown. state county omitted, entire list available FIPS codes returned, sorted state's abbreviation (e.g. Alaska (AK) comes Alabama (AL)).","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/fips.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Retrieve FIPS code for either a US state or county — fips","text":"State county FIPS (Federal Information Processing Standards) two five digit codes, respectively. uniquely identify states counties within United States. first two digits five digit county codes correspond state county belongs . FIPS codes also exist US territories minor outlying islands, though package provides information 50 US states (associated counties census designated areas).","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/fips.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Retrieve FIPS code for either a US state or county — fips","text":"state must included searching county, otherwise multiple results may returned duplicate county names.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/fips.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve FIPS code for either a US state or county — fips","text":"","code":"fips() #>  [1] \"02\" \"01\" \"05\" \"04\" \"06\" \"08\" \"09\" \"11\" \"10\" \"12\" \"13\" \"15\" \"19\" \"16\" \"17\" #> [16] \"18\" \"20\" \"21\" \"22\" \"25\" \"24\" \"23\" \"26\" \"27\" \"29\" \"28\" \"30\" \"31\" \"37\" \"33\" #> [31] \"38\" \"34\" \"35\" \"32\" \"36\" \"39\" \"40\" \"41\" \"42\" \"44\" \"45\" \"46\" \"47\" \"48\" \"49\" #> [46] \"51\" \"50\" \"53\" \"55\" \"54\" \"56\"  fips(\"NJ\") #> [1] \"34\" fips(\"California\") #> [1] \"06\"  fips(c(\"AK\", \"CA\", \"UT\")) #> [1] \"02\" \"06\" \"49\"  fips(\"CA\", county = \"orange\") #> [1] \"06059\" fips(state = \"AL\", county = \"autauga\") #> [1] \"01001\" fips(state = \"Alabama\", county = \"Autauga County\") #> [1] \"01001\""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/fips_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve states or counties using FIPS codes — fips_info","title":"Retrieve states or counties using FIPS codes — fips_info","text":"Retrieve states counties using FIPS codes","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/fips_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve states or counties using FIPS codes — fips_info","text":"","code":"fips_info(fips, sortAndRemoveDuplicates = FALSE)  # S3 method for numeric fips_info(fips, sortAndRemoveDuplicates = FALSE)  # S3 method for character fips_info(fips, sortAndRemoveDuplicates = FALSE)"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/fips_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve states or counties using FIPS codes — fips_info","text":"fips one five digit, either numeric character, vector FIPS codes look states counties. States two digit FIPS code counties five digit FIPS code (first 2 numbers pertain state). sortAndRemoveDuplicates Whether sort output remove duplicates. default, output returned order values provided fips parameter. Set parameter TRUE return output sorted FIPS single instance FIPS.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/fips_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve states or counties using FIPS codes — fips_info","text":"data frame states counties associated FIPS codes. fips omitted, data frame containing available states returned.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/fips_info.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve states or counties using FIPS codes — fips_info","text":"","code":"fips_info(2) #>   abbr fips   full #> 1   AK   02 Alaska fips_info(\"2\") #>   abbr fips   full #> 1   AK   02 Alaska fips_info(c(\"02\", \"03\", \"04\")) #> Warning: FIPS code(s) 03 not found #>   abbr fips    full #> 1   AK   02  Alaska #> 2   AZ   04 Arizona  fips_info(2016) #>     full abbr                     county  fips #> 1 Alaska   AK Aleutians West Census Area 02016 fips_info(c(\"02016\", \"02017\"), sortAndRemoveDuplicates = TRUE) #> Warning: FIPS code(s) 02017 not found #>     full abbr                     county  fips #> 1 Alaska   AK Aleutians West Census Area 02016"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/get_fips_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Gets FIPS info for either states or counties depending on input.\nHelper function for S3 method fips_info. — get_fips_info","title":"Gets FIPS info for either states or counties depending on input.\nHelper function for S3 method fips_info. — get_fips_info","text":"Gets FIPS info either states counties depending input. Helper function S3 method fips_info.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/get_fips_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Gets FIPS info for either states or counties depending on input.\nHelper function for S3 method fips_info. — get_fips_info","text":"","code":"get_fips_info(fips, sortAndRemoveDuplicates)"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/map_with_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Join county or state level data to US map data — map_with_data","title":"Join county or state level data to US map data — map_with_data","text":"Join county state level data US map data","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/map_with_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Join county or state level data to US map data — map_with_data","text":"","code":"map_with_data(data, values = \"values\", include = c(), exclude = c(), na = NA)"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/map_with_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Join county or state level data to US map data — map_with_data","text":"data data joined US map. parameter data frame consisting two columns, fips code (2 characters state, 5 characters county) value associated region. columns data must fips state value values parameter. fips state provided, function uses fips. values name column contains values associated given region. default \"values\". include regions include resulting map. regions \"states\"/\"state\", value can either state name, abbreviation FIPS code. counties, FIPS must provided can multiple counties name. states provided county map, counties included states returned. exclude regions exclude resulting map. regions \"states\"/\"state\", value can either state name, abbreviation FIPS code. counties, FIPS must provided can multiple counties name. regions listed include parameter applied first exclude regions removed resulting map. excluded regions present included regions ignored. na value inserted states counties value data. value must type value column data.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/map_with_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Join county or state level data to US map data — map_with_data","text":"data frame composed map data frame (us_map) except extra column containing values data included. result can plotted using ggplot2. See us_map plot_usmap details.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/map_with_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Join county or state level data to US map data — map_with_data","text":"","code":"state_data <- data.frame(fips = c(\"01\", \"02\", \"04\"), values = c(1, 5, 8)) df <- map_with_data(state_data, na = 0)  state_data <- data.frame(state = c(\"AK\", \"CA\", \"Utah\"), values = c(6, 9, 3)) df <- map_with_data(state_data, na = 0)"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/plot_usmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Conveniently plot basic US map — plot_usmap","title":"Conveniently plot basic US map — plot_usmap","text":"Conveniently plot basic US map","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/plot_usmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conveniently plot basic US map — plot_usmap","text":"","code":"plot_usmap(   regions = c(\"states\", \"state\", \"counties\", \"county\"),   include = c(),   exclude = c(),   data = data.frame(),   values = \"values\",   theme = theme_map(),   labels = FALSE,   label_color = \"black\",   ... )"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/plot_usmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conveniently plot basic US map — plot_usmap","text":"regions region breakdown map, can one (\"states\", \"state\", \"counties\", \"county\"). default \"states\". include regions include resulting map. regions \"states\"/\"state\", value can either state name, abbreviation FIPS code. counties, FIPS must provided can multiple counties name. states provided county map, counties included states returned. exclude regions exclude resulting map. regions \"states\"/\"state\", value can either state name, abbreviation FIPS code. counties, FIPS must provided can multiple counties name. regions listed include parameter applied first exclude regions removed resulting map. excluded regions present included regions ignored. data data frame containing values plot map. parameter data frame consisting two columns, fips code (2 characters state, 5 characters county) value associated region. columns data must fips state value values parameter. values name column contains values associated given region. default \"value\". theme theme used plotting map. default theme_map ggthemes. labels Whether display labels map. Labels displayed default. now, labels work state maps. County labels may added future. label_color color labels display. Corresponds color option aes mapping. default \"black\". Click color options. ... arguments pass ggplot2::aes(). often aesthetics, used set aesthetic fixed value, like color = \"red\" size = 3. affect appearance polygons used render map (example fill color, line color, line thickness, etc.). color/colour, fill, size specified set default values color=\"black\", fill=\"white\", size=0.4.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/plot_usmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conveniently plot basic US map — plot_usmap","text":"ggplot object contains basic US map described parameters. Since result ggplot object, can extended geom layers, scales, labels, themes, etc.","code":""},{"path":[]},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/plot_usmap.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conveniently plot basic US map — plot_usmap","text":"","code":"plot_usmap()  plot_usmap(regions = \"states\")  plot_usmap(regions = \"counties\")  plot_usmap(regions = \"state\")  plot_usmap(regions = \"county\")   # Output is ggplot object so it can be extended # with any number of ggplot layers library(ggplot2) #> RStudio Community is a great place to get help: #> https://community.rstudio.com/c/tidyverse plot_usmap(include = c(\"CA\", \"NV\", \"ID\", \"OR\", \"WA\")) +   labs(title = \"Western States\")   # Color maps with data plot_usmap(data = statepop, values = \"pop_2015\")   # Include labels on map (e.g. state abbreviations) plot_usmap(data = statepop, values = \"pop_2015\", labels = TRUE)  # Choose color for labels plot_usmap(data = statepop, values = \"pop_2015\", labels = TRUE, label_color = \"white\")"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/set_sp_evolution_status.html","id":null,"dir":"Reference","previous_headings":"","what":"Set sp evolution status — set_sp_evolution_status","title":"Set sp evolution status — set_sp_evolution_status","text":"Sets sp evolution status \"2\" force usage sf instead rgdal retired. can removed future evolution status set >= 2 default sf.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/set_sp_evolution_status.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set sp evolution status — set_sp_evolution_status","text":"","code":"set_sp_evolution_status()"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/statepop.html","id":null,"dir":"Reference","previous_headings":"","what":"Population estimates (2015), state level — statepop","title":"Population estimates (2015), state level — statepop","text":"US census population estimates state 2015.  data formatted easy merging output us_map.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/statepop.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Population estimates (2015), state level — statepop","text":"","code":"data(statepop)"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/statepop.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Population estimates (2015), state level — statepop","text":"data frame 51 rows 4 variables.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/statepop.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Population estimates (2015), state level — statepop","text":"fips 2-digit FIPS code corresponding state. abbr 2-letter state abbreviation. full full state name. pop_2015 2015 population estimate (number people) corresponding state.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/statepop.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Population estimates (2015), state level — statepop","text":"https://www.census.gov/programs-surveys/popest.html https://www.ers.usda.gov/data-products/county-level-data-sets/","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/statepov.html","id":null,"dir":"Reference","previous_headings":"","what":"Poverty percentage estimates (2014), state level — statepov","title":"Poverty percentage estimates (2014), state level — statepov","text":"US census poverty percentage estimates state 2014.  data formatted easy merging output us_map.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/statepov.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Poverty percentage estimates (2014), state level — statepov","text":"","code":"data(statepov)"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/statepov.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Poverty percentage estimates (2014), state level — statepov","text":"data frame 51 rows 4 variables.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/statepov.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Poverty percentage estimates (2014), state level — statepov","text":"fips 2-digit FIPS code corresponding state. abbr 2-letter state abbreviation. full full state name. pct_pov_2014 2014 poverty estimate (percent state population) corresponding state","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/statepov.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Poverty percentage estimates (2014), state level — statepov","text":"https://www.census.gov/topics/income-poverty/poverty.html https://www.ers.usda.gov/data-products/county-level-data-sets/","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/static_merge.html","id":null,"dir":"Reference","previous_headings":"","what":"Performs merge while maintaining original sort order. — static_merge","title":"Performs merge while maintaining original sort order. — static_merge","text":"Performs merge maintaining original sort order.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/static_merge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Performs merge while maintaining original sort order. — static_merge","text":"","code":"static_merge(x, y, ...)"},{"path":[]},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/theme_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Convenient theme map — theme_map","title":"Convenient theme map — theme_map","text":"creates nice map theme use plot_usmap. borrowed ggthemes package located repository: https://github.com/jrnold/ggthemes. function manually rewritten avoid need another package import. theme functions (.e. theme_bw, theme, element_blank, %+replace%) come ggplot2.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/theme_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convenient theme map — theme_map","text":"","code":"theme_map(base_size = 9, base_family = \"\")"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/us_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve US map data — us_map","title":"Retrieve US map data — us_map","text":"Retrieve US map data","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/us_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve US map data — us_map","text":"","code":"us_map(   regions = c(\"states\", \"state\", \"counties\", \"county\"),   include = c(),   exclude = c() )"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/us_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve US map data — us_map","text":"regions region breakdown map, can one (\"states\", \"state\", \"counties\", \"county\"). default \"states\". include regions include resulting map. regions \"states\"/\"state\", value can either state name, abbreviation FIPS code. counties, FIPS must provided can multiple counties name. states provided county map, counties included states returned. exclude regions exclude resulting map. regions \"states\"/\"state\", value can either state name, abbreviation FIPS code. counties, FIPS must provided can multiple counties name. regions listed include parameter applied first exclude regions removed resulting map. excluded regions present included regions ignored.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/us_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve US map data — us_map","text":"data frame US map coordinates divided desired regions.","code":""},{"path":[]},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/us_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve US map data — us_map","text":"","code":"str(us_map()) #> 'data.frame':\t13663 obs. of  9 variables: #>  $ x    : num  1091779 1091268 1091140 1090940 1090913 ... #>  $ y    : num  -1380695 -1376372 -1362998 -1343517 -1341006 ... #>  $ order: int  1 2 3 4 5 6 7 8 9 10 ... #>  $ hole : logi  FALSE FALSE FALSE FALSE FALSE FALSE ... #>  $ piece: int  1 1 1 1 1 1 1 1 1 1 ... #>  $ group: chr  \"01.1\" \"01.1\" \"01.1\" \"01.1\" ... #>  $ fips : chr  \"01\" \"01\" \"01\" \"01\" ... #>  $ abbr : chr  \"AL\" \"AL\" \"AL\" \"AL\" ... #>  $ full : chr  \"Alabama\" \"Alabama\" \"Alabama\" \"Alabama\" ...  df <- us_map(regions = \"counties\") west_coast <- us_map(include = c(\"CA\", \"OR\", \"WA\"))  south_atl_excl_FL <- us_map(include = .south_atlantic, exclude = \"FL\")"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/usmap.html","id":null,"dir":"Reference","previous_headings":"","what":"usmap: US maps including Alaska and Hawaii — usmap","title":"usmap: US maps including Alaska and Hawaii — usmap","text":"usually difficult inconvenient create US maps include Alaska Hawaii convenient spot. map data frames produced package use Albers Equal Area projection.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/usmap.html","id":"map-data-frames","dir":"Reference","previous_headings":"","what":"Map data frames","title":"usmap: US maps including Alaska and Hawaii — usmap","text":"Alaska Hawaii manually moved new location new coordinates place bottom-left corner map. maps can accessed using us_map function. function provides ability retrieve maps either state borders county borders using regions parameter convenience. States (counties) can included excluded using provided include exclude parameters. parameters can used together combination names, abbreviations, FIPS code create complex maps.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/usmap.html","id":"fips-lookup-tools","dir":"Reference","previous_headings":"","what":"FIPS lookup tools","title":"usmap: US maps including Alaska and Hawaii — usmap","text":"Several functions included lookup US state county pertaining FIPS code. Likewise reverse lookup can done FIPS code can used retrieve associated state(s) county(ies). can useful preparing data merged map data frame.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/usmap.html","id":"plot-us-map-data","dir":"Reference","previous_headings":"","what":"Plot US map data","title":"usmap: US maps including Alaska and Hawaii — usmap","text":"convenience function plot_usmap included takes similar parameters us_map returns ggplot2::ggplot2 object. Since output ggplot object, layers can added scales, themes, labels. Including data function call color map according values data, creating choropleth.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/usmap.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"usmap: US maps including Alaska and Hawaii — usmap","text":"Rudis, Bob. \"Moving Earth (well, Alaska & Hawaii) R.\" Blog post. Rud.., 16 Nov. 2014. Web. 10 Aug. 2015. https://rud./b/2014/11/16/moving--earth-well-alaska-hawaii--r/.","code":""},{"path":[]},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/usmap.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"usmap: US maps including Alaska and Hawaii — usmap","text":"Paolo Di Lorenzo Email: dilorenzo@hey GitHub: https://github.com/pdil/","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/usmap_crs.html","id":null,"dir":"Reference","previous_headings":"","what":"usmap coordinate reference system — usmap_crs","title":"usmap coordinate reference system — usmap_crs","text":"coordinate reference system (CRS) represents canonical projection used usmap package. can used transform shape files, spatial points, spatial data frames, etc. coordinate representation used plot_usmap function.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/usmap_crs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"usmap coordinate reference system — usmap_crs","text":"","code":"usmap_crs()"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/usmap_transform.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert coordinate date frame to usmap projection — usmap_transform","title":"Convert coordinate date frame to usmap projection — usmap_transform","text":"Converting external data frame map coordinates allow points line regular usmap plot applying Albers Equal Area projection points well.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/usmap_transform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert coordinate date frame to usmap projection — usmap_transform","text":"","code":"usmap_transform(   data,   input_names = c(\"lon\", \"lat\"),   output_names = c(\"x\", \"y\") )  # S3 method for data.frame usmap_transform(   data,   input_names = c(\"lon\", \"lat\"),   output_names = c(\"x\", \"y\") )"},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/usmap_transform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert coordinate date frame to usmap projection — usmap_transform","text":"data data frame containing coordinates two column format first column represents longitude second data frame represents latitude. names data frame column matter, just order columns kept intact. input_names character vector length two specifies longitude latitude columns input data (ones transformed), respectively. Defaults c(\"lon\", \"lat\"). output_names character vector length two specifies longitude latitude columns output data (transformation), respectively. Defaults c(\"x\", \"y\").","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/usmap_transform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert coordinate date frame to usmap projection — usmap_transform","text":"data frame containing transformed coordinates input data frame Albers Equal Area projection applied. transformed columns appended data frame original columns remain intact.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/reference/usmap_transform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert coordinate date frame to usmap projection — usmap_transform","text":"","code":"data <- data.frame(   lon = c(-74.01, -95.36, -118.24, -87.65, -134.42, -157.86),   lat = c(40.71, 29.76, 34.05, 41.85, 58.30, 21.31),   pop = c(8398748, 2325502, 3990456, 2705994, 32113, 347397) )  # Transform data transformed_data <- usmap_transform(data) #> Warning: Evolution status fixed to 2L #> Warning: Evolution status fixed to 2L #> Warning: Evolution status fixed to 2L #> Warning: Evolution status fixed to 2L  # Plot transformed data on map library(ggplot2)  plot_usmap() + geom_point(   data = transformed_data,   aes(x = x, y = y, size = pop),   color = \"red\", alpha = 0.5 )"},{"path":[]},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/news/index.html","id":"usmap-063","dir":"Changelog","previous_headings":"","what":"usmap 0.6.3","title":"usmap 0.6.3","text":"CRAN release: 2023-10-21 Released Saturday, October 21, 2023. Update package author email website.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/news/index.html","id":"usmap-062","dir":"Changelog","previous_headings":"","what":"usmap 0.6.2","title":"usmap 0.6.2","text":"CRAN release: 2023-06-13 Released Tuesday, June 13, 2023.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/news/index.html","id":"bug-fixes-0-6-2","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"usmap 0.6.2","text":"Special thanks @rsbivand.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/news/index.html","id":"usmap-061","dir":"Changelog","previous_headings":"","what":"usmap 0.6.1","title":"usmap 0.6.1","text":"CRAN release: 2022-11-12 Released Saturday, November 12, 2022.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/news/index.html","id":"bug-fixes-0-6-1","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"usmap 0.6.1","text":"Fix failing plot_usmap tests, see Issue #58. Fix aes_string size deprecation ggplot2, see Issue #59.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/news/index.html","id":"usmap-060","dir":"Changelog","previous_headings":"","what":"usmap 0.6.0","title":"usmap 0.6.0","text":"CRAN release: 2022-02-27 Released Sunday, February 27, 2022.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/news/index.html","id":"new-features-0-6-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"usmap 0.6.0","text":"Add input_names output_names parameters usmap_transform, see Issue #33. default (FALSE) value changes existing behavior, retain existing behavior, change parameter value TRUE.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/news/index.html","id":"improvements-0-6-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"usmap 0.6.0","text":"polygons shown, marginal increase data set file sizes negligible. Add shape file update history, see Issue #30. existing functions (including us_map()) continue work usual. Add data format examples plot_usmap “Mapping” vignette, see Issue #42.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/news/index.html","id":"bug-fixes-0-6-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"usmap 0.6.0","text":"Fix CRS warnings, see Issue #40. Fix plot_usmap() issue provided data \"values\" column, see Issue #48 Stack Overflow question.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/news/index.html","id":"usmap-052","dir":"Changelog","previous_headings":"","what":"usmap 0.5.2","title":"usmap 0.5.2","text":"CRAN release: 2021-01-21 Released Wednesday, October 7, 2020. Update links documentation.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/news/index.html","id":"usmap-051","dir":"Changelog","previous_headings":"","what":"usmap 0.5.1","title":"usmap 0.5.1","text":"CRAN release: 2020-10-07 Released Wednesday, October 7, 2020. Lightweight landing page containing useful information, links, examples usmap usage. state can now omitted using fips(). case, available FIPS codes returned, sorted state abbreviation, see Issue #28. fips can now omitted using fips_info(). case, available states returned, sorted state abbreviation, see Issue #28. Fix duplicate coordinates removed usmap_transform (value columns differ), see Issue #32. Prevent warnings introduced ggplot2 v3.3.0, see Issue #35. Set minimum R version 3.5.0. Versions lower support latest version rgdal package.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/news/index.html","id":"usmap-050","dir":"Changelog","previous_headings":"","what":"usmap 0.5.0","title":"usmap 0.5.0","text":"CRAN release: 2019-09-12 Released Friday, September 13, 2019.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/news/index.html","id":"new-features-0-5-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"usmap 0.5.0","text":"currently work state labels except include full county name (excluding word “County”). breaking change removes lines parameter. previous defaults color=\"black\", fill=\"white\", size=0.4 maintained used parameters omitted. Refer ggplot2::geom_polygon() documentation information. following aesthetics supported: alpha, colour/color, fill, linetype, size feature provides direct control appearance plots. Ability exclude counties states new exclude parameter us_map, map_with_data, plot_usmap, see Issue #19. Also includes usmap_crs() easily access coordinate reference system used package.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/news/index.html","id":"improvements-0-5-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"usmap 0.5.0","text":"affect behavior plot_usmap() breaking change code relies us_map(). can see .github folder.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/news/index.html","id":"usmap-040","dir":"Changelog","previous_headings":"","what":"usmap 0.4.0","title":"usmap 0.4.0","text":"CRAN release: 2018-09-16 Released Sunday, September 16, 2018.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/news/index.html","id":"new-features-0-4-0","dir":"Changelog","previous_headings":"","what":"New Features","title":"usmap 0.4.0","text":"e.g. plot_usmap(labels = TRUE) e.g. plot_usmap(include = .northeast_region) provided regions divisions can seen map US Census Bureau. e.g. us_map(\"counties\", include = \"TX\") plot_usmap(\"counties\", include = c(\"AZ\", \"NM\"))","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/news/index.html","id":"improvements-0-4-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"usmap 0.4.0","text":"e.g. fips(\"NJ\", c(\"Bergen\", \"Hudson\")) Allow columns data frame ’s passed map_with_data() plot_usmap() preserved.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/news/index.html","id":"bug-fixes-0-4-0","dir":"Changelog","previous_headings":"","what":"Bug Fixes","title":"usmap 0.4.0","text":"Add Kusilvak Census Area (FIPS code 02158), replaces Wade Hampton Census Area (FIPS code 02270).","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/news/index.html","id":"usmap-030","dir":"Changelog","previous_headings":"","what":"usmap 0.3.0","title":"usmap 0.3.0","text":"CRAN release: 2018-06-03 Released Sunday, June 3, 2018.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/news/index.html","id":"improvements-0-3-0","dir":"Changelog","previous_headings":"","what":"Improvements","title":"usmap 0.3.0","text":"Update shape files 2017 versions. Vectorization support (e.g. enter multiple states fips receive vector corresponding FIPS codes) e.g. fips(c(\"AK\", \"AL\")) fips(c(\"Alaska\", \"Alabama\")) Mixed abbreviations full names also supported: fips(c(\"AK\", \"Alabama\")) Improved warning error messages. data frame passed plot_usmap map_with_data (via data = parameter), can now two column data frame columns “fips” “values” “state” “values”.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/news/index.html","id":"usmap-021","dir":"Changelog","previous_headings":"","what":"usmap 0.2.1","title":"usmap 0.2.1","text":"CRAN release: 2017-08-15 Released Tuesday, August 15, 2017.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/news/index.html","id":"improvements-0-2-1","dir":"Changelog","previous_headings":"","what":"Improvements","title":"usmap 0.2.1","text":"Standardize documentation language. Improve descriptiveness error messages warnings. ### Bug Fixes usually occurs codes read numeric .csv file.","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/news/index.html","id":"usmap-020","dir":"Changelog","previous_headings":"","what":"usmap 0.2.0","title":"usmap 0.2.0","text":"CRAN release: 2017-04-29 Released Saturday, April 29, 2017. Add map_with_data function adding user-defined data map data. Add ability plot map data automatically (utilizes new map_with_data function).","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/news/index.html","id":"usmap-010","dir":"Changelog","previous_headings":"","what":"usmap 0.1.0","title":"usmap 0.1.0","text":"CRAN release: 2017-01-29 Released Sunday, January 29, 2017. First release","code":""},{"path":"https://jhu-statprogramming-fall-2023.github.io/biostat777-project3-part1-yyingying00/news/index.html","id":"main-features-0-1-0","dir":"Changelog","previous_headings":"","what":"Main features","title":"usmap 0.1.0","text":"Retrieve US map data frame merging data plotting Lookup FIPS codes states counties (reverse-lookup well) Map plotting convenience method (uses ggplot2)","code":""}]
